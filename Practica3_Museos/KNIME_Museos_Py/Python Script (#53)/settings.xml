<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="python3_command" type="xstring" value=""/>
        <entry key="script" type="xstring" value="import knime.scripting.io as knio%%00010import pandas as pd%%00010%%00010# Identificacion de los archivos de entrada%%00010municipios = knio.input_tables[0].to_pandas()%%00010entidades = knio.input_tables[1].to_pandas()%%00010datosmuseo = knio.input_tables[2].to_pandas()%%00010%%00010datos_entidades = pd.merge(entidades, datosmuseo, how='inner', left_on=&quot;CVE_ENT&quot;, right_on=&quot;ENT_RESID&quot;)%%00010datos_municipios = pd.merge(%%00010    municipios, %%00010    datos_entidades, %%00010    how='inner',%%00010    left_on=['CVE_ENT','CVE_MUN'],%%00010    right_on=['ENT_RESID','MUN_RESID'])%%00010%%00010ruta_archivo=r&quot;/Users/emilianomartinez/Documents/Universidad/5° Semestre/Minería de datos/3_proyMuseos/Etiquetas.csv&quot;%%00010etiquetas=pd.read_csv(ruta_archivo, sep=',', encoding='latin1')%%00010%%00010%%00010sexo= etiquetas[[&quot;Valor_Sexo&quot;,&quot;Etiqueta_Sexo&quot;]].copy()%%00010sexo=sexo.dropna()%%00010%%00010%%00010datos_sexo = pd.merge(%%00010    datos_municipios,                 %%00010    sexo,          %%00010    left_on='SEXO',%%00010    right_on='Valor_Sexo',  %%00010    how='left'                 %%00010)%%00010%%00010escuela= etiquetas[[&quot;Valor_Esc&quot;,&quot;Etiqueta_Esc&quot;]].copy()%%00010escuela=escuela.dropna()%%00010%%00010datos_escuela = pd.merge(%%00010    datos_sexo,                 %%00010    escuela,          %%00010    left_on='ESCOLARIDA',%%00010    right_on='Valor_Esc',  %%00010    how='left'                 %%00010)%%00010%%00010mes= etiquetas[[&quot;Valor_Mes&quot;,&quot;Etiqueta_Mes&quot;]].copy()%%00010mes=mes.dropna()%%00010%%00010datos_mes = pd.merge(%%00010    datos_escuela,                 %%00010    mes,          %%00010    left_on='MES_ENTREV',%%00010    right_on='Valor_Mes',  %%00010    how='left'                 %%00010)%%00010%%00010%%00010%%00010ocupacion= etiquetas[[&quot;Valor_Ocup&quot;,&quot;Etiqueta_Ocup&quot;]].copy()%%00010ocupacion=ocupacion.dropna()%%00010%%00010datos_ocupacion = pd.merge(%%00010    datos_mes,                 %%00010    ocupacion,          %%00010    left_on='OCUPACION',%%00010    right_on='Valor_Ocup',  %%00010    how='left'                 %%00010)%%00010transporte= etiquetas[[&quot;Valor_Trans&quot;,&quot;Etiqueta_Trans&quot;]].copy()%%00010transporte=transporte.dropna()%%00010%%00010datos_transporte = pd.merge(%%00010    datos_ocupacion,                 %%00010    transporte,          %%00010    left_on='MEDIO_TRAN',%%00010    right_on='Valor_Trans',  %%00010    how='left'                 %%00010)%%00010%%00010opinion= etiquetas[[&quot;Valor_Opin&quot;,&quot;Etiqueta_Opin&quot;]].copy()%%00010opinion=opinion.dropna()%%00010%%00010datos_opinion = pd.merge(%%00010    datos_transporte,                 %%00010    opinion,          %%00010    left_on='OPIN_EXPOS',%%00010    right_on='Valor_Opin',  %%00010    how='left'                 %%00010)%%00010%%00010df_final= etiquetas[[&quot;Valor_Eval&quot;,&quot;Etiqueta_Eval&quot;]].copy()%%00010df_final=df_final.dropna()%%00010%%00010datos_final = pd.merge(%%00010    datos_transporte,                 %%00010    df_final,          %%00010    left_on='EVAL_GRAL',%%00010    right_on='Valor_Eval',  %%00010    how='left'                 %%00010)%%00010%%00010%%00010%%00010%%00010renamed = datos_final.rename(columns={%%00010    &quot;NOMBRE_MUN&quot;:'NOMBRE_MUN_RESID',%%00010    'NOMBRE_ENT':'NOMBRE_ENT_RESID',%%00010})%%00010%%00010%%00010%%00010%%00010knio.output_tables[0] = knio.Table.from_pandas(renamed)%%00010%%00010%%00010%%00010"/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="python3_command">
                <entry key="used_variable" type="xstring" value=""/>
                <entry key="used_variable_flawed" type="xboolean" value="false"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="Asignar etiquetas"/>
        <entry key="contentType" type="xstring" value="text/plain"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="289"/>
        <entry key="y-coordinate" type="xint" value="239"/>
        <entry key="width" type="xint" value="104"/>
        <entry key="height" type="xint" value="13"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="9"/>
        <entry key="annotation-version" type="xint" value="20230412"/>
        <config key="styles">
            <config key="style_0">
                <entry key="start" type="xint" value="0"/>
                <entry key="length" type="xint" value="17"/>
                <entry key="fontname" type="xstring" value="Arial"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="9"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="EXECUTED"/>
    <entry key="factory" type="xstring" value="org.knime.python3.scripting.nodes2.script.PythonScriptNodeFactory"/>
    <entry key="node-name" type="xstring" value="Python Script"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python 3 - Scripting Nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python3.scripting.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="5.5.1.v202507241235"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python3.scripting.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="5.5.1.v202507290925"/>
    <config key="factory_settings"/>
    <config key="node_creation_config">
        <config key="Input object (pickled)"/>
        <config key="Input table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
            <config key="port_1">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
            <config key="port_2">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output image"/>
        <config key="Output object (pickled)"/>
    </config>
    <entry key="name" type="xstring" value="Python Script"/>
    <entry key="hasContent" type="xboolean" value="true"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            <entry key="port_object_summary" type="xstring" value="Rows: 167307, Cols: 46"/>
            <entry key="port_dir_location" type="xstring" value="port_1"/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" value="e39d85c4-1648-4dc5-acc2-0a696257df58"/>
    </config>
</config>
